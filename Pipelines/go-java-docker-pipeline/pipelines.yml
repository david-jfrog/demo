resources:
  - name: dw_gitRepo
    type: GitRepo
    configuration:
      path: david-jfrog/SwampUp2022
      gitProvider: davidw
      buildOn:
        commit: false
  - name: dw_gosvc_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryUnified
      buildName: svc_build
      buildNumber: 1

  - name: dw_gosvc_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryUnified
      buildName: svc_build
      buildNumber: 1

  - name: dw_appl_build_info_output
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryUnified
      buildName: backend_build
      buildNumber: 1

  - name: dw_dockerBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryUnified
      buildName: backend_build
      buildNumber: 1

  - name: dw_appl_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryUnified
      buildName: backend_build
      buildNumber: 1

  - name: dw_appl_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: ArtifactoryUnified
      buildName: backend_build
      buildNumber: 1

  - name: dw_release_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: Distribution
      name: dw_demo_rb
      version: v1.0.0

  - name: dw_signed_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: Distribution
      name: dw_demo_rb
      version: v1.0.0

  - name: dw_distribution_rules
    type: DistributionRule
    configuration:
      sourceDistribution: Distribution
      serviceName: "Edge*"
      siteName: "Edge*"
      cityName: "*"
      countryCodes:
        - "*"

  # - name: deploy_vm
  #   type: VmCluster
  #   configuration:
  #     sshKey: deploySsh
  #     targets:
  #       - 167.71.157.57

pipelines:
  - name: dw_demo_gosvc
    steps:
      - name: bld_svc
        type: DockerBuild
        configuration:
          dockerFileLocation: Pipelines/go-java-docker-pipeline/go-service
          dockerFileName: Dockerfile
          dockerImageName: docker.artifactory-unified.soleng-us.jfrog.team/gosvc
          dockerImageTag: ${run_number}
          inputResources:
            - name: dw_gitRepo
          integrations:
            - name: ArtifactoryUnified

      - name: push_svc
        type: DockerPush
        configuration:
          targetRepository: docker-dev-local
          forceXrayScan: true
          autoPublishBuildInfo: true
          integrations:
            - name: ArtifactoryUnified
          inputSteps:
            - name: bld_svc
          outputResources:
            - name: dw_gosvc_build_info
            
      - name: promote_svc_build
        type: PromoteBuild
        configuration:
          targetRepository: docker-prod-local
          integrations:
            - name: ArtifactoryUnified
          inputResources:
            - name: dw_gosvc_build_info
          outputResources:
            - name: dw_gosvc_promoted_build_info

  - name: dw_demo_application
    steps:
      - name: bld_backend
        type: MvnBuild
        configuration:
          sourceLocation: Pipelines/go-java-docker-pipeline/java-backend-service
          mvnCommand: clean install -ntp
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: dw_gitRepo
          integrations:
            - name: ArtifactoryUnified
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - "11"
        execution:
          onStart:
            - javac -version
            - mvn --version
            - sed -ie 's/Default-Server/ArtifactoryUnified/g' $res_dw_gitRepo_resourcePath/Pipelines/go-java-docker-pipeline/java-backend-service/mvn-art-config

      - name: bld_frontend
        type: NpmBuild
        configuration:
          npmArgs: --no-progress --no-audit
          sourceLocation: Pipelines/go-java-docker-pipeline/npm-frontend-service
          repositoryName: npm
          inputResources:
            - name: dw_gitRepo
          integrations:
            - name: ArtifactoryUnified

      - name: publish_frontend
        type: NpmPublish
        configuration:
          repositoryName: npm-dev-local
          inputSteps:
            - name: bld_frontend
          integrations:
            - name: ArtifactoryUnified
        execution:
          onStart:
            - export inputNpmBuildStepName="bld_frontend"

      - name: build_DockerApp
        type: Bash
        configuration:
          environmentVariables:
            dockerImageName: docker.artifactory-unified.soleng-us.jfrog.team/pipeline_app_demo
            dockerImageTag: '${run_number}'
          inputResources:
            - name: dw_gitRepo
              trigger: false
          inputSteps:
            - name: bld_backend
            - name: publish_frontend
          integrations:
            - name: ArtifactoryUnified
        execution:
          onStart:
            - rm -rf $run_dir/workspace/jfrog
            - retry_command jfrog rt config --url $int_ArtifactoryUnified_url --user $int_ArtifactoryUnified_user --apikey $int_ArtifactoryUnified_apikey --interactive=false
            - pushd $res_dw_gitRepo_resourcePath/Pipelines/go-java-docker-pipeline
            - add_run_variables buildStepName=${step_name}
            - add_run_variables ${step_name}_buildNumber=${run_number}
            - add_run_variables ${step_name}_buildName=${pipeline_name}
            - docker build --pull --no-cache -t $dockerImageName:$dockerImageTag --build-arg REGISTRY=${int_ArtifactoryUnified_url} .
            - jfrog rt bce $pipeline_name $run_number
            - jfrog rt docker-push docker.artifactory-unified.soleng-us.jfrog.team/pipeline_app_demo:$run_number docker-dev-local --build-name=$pipeline_name --build-number=$run_number
            - add_run_files /tmp/jfrog/. jfrog


#      - name: buildDockerApp
#        type: DockerBuild
#        configuration:
#          dockerFileLocation: Pipelines/go-java-docker-pipeline
#          dockerFileName: Dockerfile
#          dockerImageName: docker.artifactory-unified.soleng-us.jfrog.team/pipeline_app_demo
#          dockerImageTag: '${run_number}'
#          integrations:
#            - name: ArtifactoryUnified
#          inputResources:
#            - name: dw_gitRepo
#          inputSteps:
#            - name: bld_backend
#            - name: publish_frontend

 #     - name: pushDockerApp
 #       type: DockerPush
 #       configuration:
 #         targetRepository: docker-dev-local
 #         forceXrayScan: false
 #         autoPublishBuildInfo: true
 #         integrations:
 #           - name: ArtifactoryUnified
 #         inputSteps:
 #           - name: buildDockerApp
 #         outputResources:
 #           - name: dw_dockerBuildInfo

      - name: publish_app_build
        type: PublishBuildInfo
        configuration:
          forceXrayScan: false
          inputSteps:
            #- name: pushDockerApp
            - name: build_DockerApp
          outputResources:
            - name: dw_appl_build_info

      - name: promoteDockerApp
        type: PromoteBuild
        configuration:
          targetRepository: docker-prod-local
          integrations:
            - name: ArtifactoryUnified
          inputResources:
            - name: dw_appl_build_info
          outputResources:
            - name: dw_appl_promoted_build_info

  - name: dw_demo_release_mgmt
    steps:
      - name: bundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: dw_demo_rb
          releaseBundleVersion: v1.0.${run_number}
          dryRun: false
          sign: false
          description: "some random test description"
          inputResources:
            - name: dw_gosvc_promoted_build_info
              trigger: false
            - name: dw_appl_promoted_build_info
              trigger: false
          outputResources:
            - name: dw_release_bundle
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
                * Bullet
                * Points

      - name: sign
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: dw_release_bundle
          outputResources:
            - name: dw_signed_bundle

      - name: distribute
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          inputResources:
            - name: dw_signed_bundle
            - name: dw_distribution_rules
